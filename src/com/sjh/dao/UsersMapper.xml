<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sjh.dao.UsersMapper">
	<resultMap id="BaseResultMap" type="com.sjh.entity.Users">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="role" property="role" jdbcType="VARCHAR" />
		<result column="telphone" property="telphone" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, username, password, nickname, sex, role, telphone
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByUsernamePwd" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from users
		where username=#{0,jdbcType=VARCHAR} and
		password=#{1,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from users
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.sjh.entity.Users"
		useGeneratedKeys="true" keyProperty="id">
		insert into users (id, username,
		password,
		nickname, sex, role,
		telphone)
		values (#{id,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{nickname,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
		#{role,jdbcType=VARCHAR},
		#{telphone,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.sjh.entity.Users">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="nickname != null">
				nickname,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="role != null">
				role,
			</if>
			<if test="telphone != null">
				telphone,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				#{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				#{role,jdbcType=VARCHAR},
			</if>
			<if test="telphone != null">
				#{telphone,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.sjh.entity.Users">
		update users
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="nickname != null">
				nickname = #{nickname,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="role != null">
				role = #{role,jdbcType=VARCHAR},
			</if>
			<if test="telphone != null">
				telphone = #{telphone,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.sjh.entity.Users">
		update users
		set
		username = #{username,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		nickname = #{nickname,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		role = #{role,jdbcType=VARCHAR},
		telphone = #{telphone,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="getAllUsers" resultType="com.sjh.entity.Users">
		select
		<include refid="Base_Column_List" />
		from users
	</select>
</mapper>